<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="2" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-03T18:49:31 KST" name="ExtentReport" finished-at="2023-04-03T18:52:37 KST" duration-ms="186239">
    <groups>
    </groups>
    <test started-at="2023-04-03T18:49:31 KST" name="Test_Project" finished-at="2023-04-03T18:52:37 KST" duration-ms="186239">
      <class name="Apollo_001_Test.Apollo_01_공통">
        <test-method is-config="true" signature="setupClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Apollo_001_Test.Apollo_01_공통@6f03482]" started-at="2023-04-03T18:49:31 KST" name="setupClass" finished-at="2023-04-03T18:49:40 KST" duration-ms="9379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[APOLLO_STG]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[http://0.0.0.0:4723/wd/hub]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[STG]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Apollo]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[in]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[R33M4000CY]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[adot]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[APL00000BTEPAZ4LHSLC]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[APL00000BTEPAZ6TEJNK]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupClass -->
        <test-method is-config="true" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_Test.Apollo_01_공통@6f03482]" started-at="2023-04-03T18:49:40 KST" name="BeforeMethod" finished-at="2023-04-03T18:49:40 KST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_Test.Apollo_01_공통.TC_000_001_031(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="TC_000_001_031(java.lang.reflect.Method)[pri:0, instance:Apollo_001_Test.Apollo_01_공통@6f03482]" started-at="2023-04-03T18:49:40 KST" name="TC_000_001_031" description="A. Hotfix Regression Test : 000-001-003 Android + 다른 앱 위에 그리기" finished-at="2023-04-03T18:49:40 KST" duration-ms="3" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_Test.Apollo_01_공통.TC_000_001_031(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping this exception]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping this exception
at Apollo_001_Test.Apollo_01_공통.TC_000_001_031(Apollo_01_공통.java:32)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_000_001_031 -->
        <test-method is-config="true" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_Test.Apollo_01_공통@6f03482]" started-at="2023-04-03T18:49:40 KST" name="AfterMethod" finished-at="2023-04-03T18:49:40 KST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_000_001_031 status=SKIP method=Apollo_01_공통.TC_000_001_031(java.lang.reflect.Method)[pri:0, instance:Apollo_001_Test.Apollo_01_공통@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="TC_002_005_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_Test.Apollo_01_공통@6f03482]" started-at="2023-04-03T18:49:40 KST" name="TC_002_005_001" description="A. Hotfix Regression Test : 002-005-001 sidemenu_profile 캐릭터 프로필 영역(os 동일)" finished-at="2023-04-03T18:50:47 KST" duration-ms="67113" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_Test.Apollo_01_공통.TC_002_005_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_002_005_001 -->
        <test-method is-config="true" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_Test.Apollo_01_공통@6f03482]" started-at="2023-04-03T18:49:40 KST" name="BeforeMethod" finished-at="2023-04-03T18:49:40 KST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_Test.Apollo_01_공통.TC_002_005_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method is-config="true" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_Test.Apollo_01_공통@6f03482]" started-at="2023-04-03T18:50:47 KST" name="AfterMethod" finished-at="2023-04-03T18:50:47 KST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_002_005_001 status=SUCCESS method=Apollo_01_공통.TC_002_005_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_Test.Apollo_01_공통@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="TC_002_005_015(java.lang.reflect.Method)[pri:0, instance:Apollo_001_Test.Apollo_01_공통@6f03482]" started-at="2023-04-03T18:50:47 KST" name="TC_002_005_015" description="A. Hotfix Regression Test : 002-005-015 Sidemenu_1 사이드메뉴 프로필 영역" finished-at="2023-04-03T18:51:50 KST" duration-ms="63120" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_Test.Apollo_01_공통.TC_002_005_015(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_002_005_015 -->
        <test-method is-config="true" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_Test.Apollo_01_공통@6f03482]" started-at="2023-04-03T18:50:47 KST" name="BeforeMethod" finished-at="2023-04-03T18:50:47 KST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_Test.Apollo_01_공통.TC_002_005_015(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method is-config="true" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_Test.Apollo_01_공통@6f03482]" started-at="2023-04-03T18:51:50 KST" name="AfterMethod" finished-at="2023-04-03T18:51:50 KST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_002_005_015 status=SUCCESS method=Apollo_01_공통.TC_002_005_015(java.lang.reflect.Method)[pri:0, instance:Apollo_001_Test.Apollo_01_공통@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_Test.Apollo_01_공통@6f03482]" started-at="2023-04-03T18:51:50 KST" name="BeforeMethod" finished-at="2023-04-03T18:51:50 KST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_Test.Apollo_01_공통.TC_002_006_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="TC_002_006_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_Test.Apollo_01_공통@6f03482]" started-at="2023-04-03T18:51:50 KST" name="TC_002_006_001" description="A. Hotfix Regression Test : 002-006-001 home Web Viewer 웹 뷰어" finished-at="2023-04-03T18:52:35 KST" duration-ms="44948" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_Test.Apollo_01_공통.TC_002_006_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: By.id: toolbar_button_close (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: By.id: toolbar_button_close (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at unit.Utilities.WaitfindElement(Utilities.java:156)
at unit.Utilities.click(Utilities.java:1397)
at Apollo_001_Test.Apollo_01_공통.TC_002_006_001(Apollo_01_공통.java:507)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'XPVFW1QHC4', ip: 'fe80:0:0:0:1cc6:2650:c43:4c76%en0', os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '13.2.1', java.version: '17.0.2'
Driver info: unit.Utilities
Capabilities {appActivity: com.skt.nugu.visual.splash...., appPackage: com.skt.nugu.apollo.stg, automationName: UIAutomator2, chromedriverArgs: {browserName: chrome, goog:chromeOptions: {args: [], extensions: [], w3c: true}}, chromedriverExecutable: ~/Library/chromedriver_mac6..., databaseEnabled: false, desired: {appActivity: com.skt.nugu.visual.splash...., appPackage: com.skt.nugu.apollo.stg, automationName: UIAutomator2, chromedriverArgs: {browserName: chrome, goog:chromeOptions: {args: [], extensions: [], w3c: true}}, chromedriverExecutable: ~/Library/chromedriver_mac6..., deviceName: Android, extractChromeAndroidPackageFromContextName: true, focused: true, newCommandTimeout: 600000, noReset: true, platformName: android, recreateChromeDriverSessions: false, showChromedriverLog: true, udid: R33M4000CY}, deviceApiLevel: 31, deviceManufacturer: samsung, deviceModel: SM-N976N, deviceName: R33M4000CY, deviceScreenDensity: 420, deviceScreenSize: 1080x2280, deviceUDID: R33M4000CY, extractChromeAndroidPackageFromContextName: true, focused: true, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 600000, noReset: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 12, recreateChromeDriverSessions: false, showChromedriverLog: true, statBarHeight: 85, takesScreenshot: true, udid: R33M4000CY, viewportRect: {height: 1984, left: 0, top: 85, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 6deec99d-6834-4981-9492-a86e84d87e5e
*** Element info: {Using=id, value=toolbar_button_close}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at unit.Utilities.execute(Utilities.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:61)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at unit.Utilities.findElement(Utilities.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
at io.appium.java_client.DefaultGenericMobileDriver.findElementById(DefaultGenericMobileDriver.java:69)
at io.appium.java_client.AppiumDriver.findElementById(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElementById(AndroidDriver.java:1)
at unit.Utilities.findElementById(Utilities.java:1)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at unit.Utilities.findElement(Utilities.java:1)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:205)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:201)
at org.openqa.selenium.support.ui.ExpectedConditions$22.apply(ExpectedConditions.java:641)
at org.openqa.selenium.support.ui.ExpectedConditions$22.apply(ExpectedConditions.java:638)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_002_006_001 -->
        <test-method is-config="true" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_Test.Apollo_01_공통@6f03482]" started-at="2023-04-03T18:52:35 KST" name="AfterMethod" finished-at="2023-04-03T18:52:36 KST" duration-ms="712" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_002_006_001 status=FAILURE method=Apollo_01_공통.TC_002_006_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_Test.Apollo_01_공통@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="tearDownClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Apollo_001_Test.Apollo_01_공통@6f03482]" started-at="2023-04-03T18:52:36 KST" name="tearDownClass" finished-at="2023-04-03T18:52:37 KST" duration-ms="932" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[STG]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[APOLLO_STG]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[in]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[R33M4000CY]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[adot]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[APL00000BTEPAZ4LHSLC]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[APL00000BTEPAZ6TEJNK]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Apollo_001_Test.Apollo_01_공통 -->
    </test> <!-- Test_Project -->
  </suite> <!-- ExtentReport -->
</testng-results>
