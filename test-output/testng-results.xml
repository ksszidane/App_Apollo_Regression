<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="13" passed="11">
  <reporter-output>
  </reporter-output>
  <suite name="ExtentReport" duration-ms="636736" started-at="2023-04-11T22:02:08 KST" finished-at="2023-04-11T22:12:44 KST">
    <groups>
    </groups>
    <test name="Test_Project" duration-ms="636736" started-at="2023-04-11T22:02:08 KST" finished-at="2023-04-11T22:12:44 KST">
      <class name="Apollo_001_공통.Apollo_03_공통">
        <test-method status="PASS" signature="setupClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="setupClass" is-config="true" duration-ms="12798" started-at="2023-04-11T22:02:08 KST" finished-at="2023-04-11T22:02:21 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[APOLLO_STG]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[http://0.0.0.0:4723/wd/hub]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[STG]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Apollo]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[in]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[R33M4000CY]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[adot]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[APL00000CAP8UMKRSNB4]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[APL00000CAP8UMNEOSG0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupClass -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="7" started-at="2023-04-11T22:02:21 KST" finished-at="2023-04-11T22:02:21 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_006_004_007(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="TC_006_004_007(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_006_004_007" duration-ms="36277" started-at="2023-04-11T22:02:21 KST" description="A. Hotfix Regression Test : 006-004-007 calc_case1_001 계산 기능 + 출력 가능 범위" finished-at="2023-04-11T22:02:57 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_006_004_007(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_006_004_007 -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2023-04-11T22:02:57 KST" finished-at="2023-04-11T22:02:57 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_006_004_007 status=SUCCESS method=Apollo_03_공통.TC_006_004_007(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2023-04-11T22:02:57 KST" finished-at="2023-04-11T22:02:57 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_007_001_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="TC_007_001_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_007_001_001" duration-ms="62057" started-at="2023-04-11T22:02:57 KST" description="A. Hotfix Regression Test : 007-001-001 apollo_news_audio_player_DUX_1 뉴스재생 + Floating Player" finished-at="2023-04-11T22:03:59 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_007_001_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_007_001_001 -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2023-04-11T22:03:59 KST" finished-at="2023-04-11T22:03:59 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_007_001_001 status=SUCCESS method=Apollo_03_공통.TC_007_001_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2023-04-11T22:03:59 KST" finished-at="2023-04-11T22:03:59 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_007_003_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="FAIL" signature="TC_007_003_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_007_003_001" duration-ms="56285" started-at="2023-04-11T22:03:59 KST" description="A. Hotfix Regression Test : 007-003-001 apollo_news_play_recent_001 뉴스 재생" finished-at="2023-04-11T22:04:55 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_007_003_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at unit.Utilities.motion_tid_JsonParsing(Utilities.java:4216)
at unit.Utilities.Motion_JsonParsing(Utilities.java:2855)
at Apollo_001_공통.Apollo_03_공통.TC_007_003_001(Apollo_03_공통.java:146)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_007_003_001 -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="929" started-at="2023-04-11T22:04:55 KST" finished-at="2023-04-11T22:04:56 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_007_003_001 status=FAILURE method=Apollo_03_공통.TC_007_003_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="TC_008_001_002(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_008_001_002" duration-ms="45869" started-at="2023-04-11T22:04:56 KST" description="A. Hotfix Regression Test : 008-001-002 fortune_dux_002 Template + CardTableScrollable" finished-at="2023-04-11T22:05:42 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_008_001_002(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at unit.Utilities.motion_tid_JsonParsing(Utilities.java:4216)
at unit.Utilities.Motion_JsonParsing(Utilities.java:2855)
at Apollo_001_공통.Apollo_03_공통.TC_008_001_002(Apollo_03_공통.java:165)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_008_001_002 -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2023-04-11T22:04:56 KST" finished-at="2023-04-11T22:04:56 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_008_001_002(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="823" started-at="2023-04-11T22:05:42 KST" finished-at="2023-04-11T22:05:43 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_008_001_002 status=FAILURE method=Apollo_03_공통.TC_008_001_002(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2023-04-11T22:05:43 KST" finished-at="2023-04-11T22:05:43 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_008_004_002(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="TC_008_004_002(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_008_004_002" duration-ms="86304" started-at="2023-04-11T22:05:43 KST" description="A. Hotfix Regression Test : 008-004-001 fortune_zodiac_001 띠 운세 + 날짜 지정 + 띠 이름 O" finished-at="2023-04-11T22:07:09 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_008_004_002(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_008_004_002 -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2023-04-11T22:07:09 KST" finished-at="2023-04-11T22:07:09 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_008_004_002 status=SUCCESS method=Apollo_03_공통.TC_008_004_002(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2023-04-11T22:07:09 KST" finished-at="2023-04-11T22:07:09 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_010_003_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="TC_010_003_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_010_003_001" duration-ms="86288" started-at="2023-04-11T22:07:09 KST" description="A. Hotfix Regression Test : 010-003-001 weather_cast_default_001 시간/날짜 미지정" finished-at="2023-04-11T22:08:35 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_010_003_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_010_003_001 -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2023-04-11T22:08:35 KST" finished-at="2023-04-11T22:08:35 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_010_003_001 status=SUCCESS method=Apollo_03_공통.TC_010_003_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="1" started-at="2023-04-11T22:08:35 KST" finished-at="2023-04-11T22:08:35 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_011_001_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="TC_011_001_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_011_001_001" duration-ms="61587" started-at="2023-04-11T22:08:35 KST" description="A. Hotfix Regression Test : 011-010-001 apollo_tmap_show_recent_001 apollo_tmap_show_recent_002 최근 목적지 요청" finished-at="2023-04-11T22:09:37 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_011_001_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_011_001_001 -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2023-04-11T22:09:37 KST" finished-at="2023-04-11T22:09:37 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_011_001_001 status=SUCCESS method=Apollo_03_공통.TC_011_001_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="1" started-at="2023-04-11T22:09:37 KST" finished-at="2023-04-11T22:09:37 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_013_002_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="TC_013_002_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_013_002_001" duration-ms="85882" started-at="2023-04-11T22:09:37 KST" description="A. Hotfix Regression Test : 013-002-001 wordchain_start_004 난이도 설정 없이 쿵쿵따맨 먼저 게임을 시작하는 경우" finished-at="2023-04-11T22:11:03 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_013_002_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_013_002_001 -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2023-04-11T22:11:03 KST" finished-at="2023-04-11T22:11:03 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_014_004_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="TC_014_004_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_014_004_001" duration-ms="13407" started-at="2023-04-11T22:11:03 KST" description="A. Hotfix Regression Test : 014-004-001 apollo_message_sendmessage_001 수신자 / 메시지 없음" finished-at="2023-04-11T22:11:16 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_014_004_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_014_004_001 -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2023-04-11T22:11:03 KST" finished-at="2023-04-11T22:11:03 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_013_002_001 status=SUCCESS method=Apollo_03_공통.TC_013_002_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2023-04-11T22:11:16 KST" finished-at="2023-04-11T22:11:16 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_014_004_001 status=SUCCESS method=Apollo_03_공통.TC_014_004_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="TC_014_008_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_014_008_001" duration-ms="19395" started-at="2023-04-11T22:11:16 KST" description="A. Hotfix Regression Test : 014-008-001 apollo_message_dialogue_020 연락처 리스트 중 수신자 선택 + 기/서수 + MSG_BODY값 없음" finished-at="2023-04-11T22:11:36 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_014_008_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_014_008_001 -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2023-04-11T22:11:16 KST" finished-at="2023-04-11T22:11:16 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_014_008_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2023-04-11T22:11:36 KST" finished-at="2023-04-11T22:11:36 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_014_008_001 status=SUCCESS method=Apollo_03_공통.TC_014_008_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="1" started-at="2023-04-11T22:11:36 KST" finished-at="2023-04-11T22:11:36 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_015_004_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="TC_015_004_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_015_004_001" duration-ms="7905" started-at="2023-04-11T22:11:36 KST" description="A. Hotfix Regression Test : 015-004-001 apollo_telephony_global_001 Domain Default" finished-at="2023-04-11T22:11:44 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_015_004_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_015_004_001 -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2023-04-11T22:11:44 KST" finished-at="2023-04-11T22:11:44 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_015_004_001 status=SUCCESS method=Apollo_03_공통.TC_015_004_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2023-04-11T22:11:44 KST" finished-at="2023-04-11T22:11:44 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_015_005_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="TC_015_005_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_015_005_001" duration-ms="7928" started-at="2023-04-11T22:11:44 KST" description="A. Hotfix Regression Test : 015-005-001 apollo_telephony_connetcall_001 수신자를 지정하지 않고 발신 요청 + 수신자 ENTITY 없는 발신 요청" finished-at="2023-04-11T22:11:51 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_015_005_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_015_005_001 -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2023-04-11T22:11:51 KST" finished-at="2023-04-11T22:11:51 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_015_005_001 status=SUCCESS method=Apollo_03_공통.TC_015_005_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="TC_015_016_003(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_015_016_003" duration-ms="52257" started-at="2023-04-11T22:11:51 KST" description="A. Hotfix Regression Test : 015-016-003 캐릭터 프로필 설정 영역 + 전화 프로필 설정 영역" finished-at="2023-04-11T22:12:44 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_015_016_003(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_015_016_003 -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2023-04-11T22:11:51 KST" finished-at="2023-04-11T22:11:51 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_015_016_003(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2023-04-11T22:12:44 KST" finished-at="2023-04-11T22:12:44 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_015_016_003 status=SUCCESS method=Apollo_03_공통.TC_015_016_003(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="tearDownClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="tearDownClass" is-config="true" duration-ms="695" started-at="2023-04-11T22:12:44 KST" finished-at="2023-04-11T22:12:44 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[STG]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[APOLLO_STG]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[in]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[R33M4000CY]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[adot]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[APL00000CAP8UMKRSNB4]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[APL00000CAP8UMNEOSG0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Apollo_001_공통.Apollo_03_공통 -->
    </test> <!-- Test_Project -->
  </suite> <!-- ExtentReport -->
</testng-results>
