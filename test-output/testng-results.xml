<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="5" ignored="0" total="13" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="ExtentReport" duration-ms="532174" started-at="2023-04-12T02:05:52 KST" finished-at="2023-04-12T02:14:44 KST">
    <groups>
    </groups>
    <test name="Test_Project" duration-ms="532174" started-at="2023-04-12T02:05:52 KST" finished-at="2023-04-12T02:14:44 KST">
      <class name="Apollo_001_공통.Apollo_03_공통">
        <test-method status="PASS" signature="setupClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="setupClass" is-config="true" duration-ms="12616" started-at="2023-04-12T02:05:52 KST" finished-at="2023-04-12T02:06:05 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[APOLLO_STG]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[http://0.0.0.0:4723/wd/hub]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[STG]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Apollo]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[in]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[R33M4000CY]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[adot]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[APL00000CAP8UMKRSNB4]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[APL00000CAP8UMNEOSG0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupClass -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="6" started-at="2023-04-12T02:06:05 KST" finished-at="2023-04-12T02:06:05 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_006_004_007(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="TC_006_004_007(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_006_004_007" duration-ms="35598" started-at="2023-04-12T02:06:05 KST" description="A. Hotfix Regression Test : 006-004-007 calc_case1_001 계산 기능 + 출력 가능 범위" finished-at="2023-04-12T02:06:40 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_006_004_007(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_006_004_007 -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2023-04-12T02:06:40 KST" finished-at="2023-04-12T02:06:40 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_006_004_007 status=SUCCESS method=Apollo_03_공통.TC_006_004_007(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="1" started-at="2023-04-12T02:06:40 KST" finished-at="2023-04-12T02:06:40 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_007_001_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="TC_007_001_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_007_001_001" duration-ms="62318" started-at="2023-04-12T02:06:40 KST" description="A. Hotfix Regression Test : 007-001-001 apollo_news_audio_player_DUX_1 뉴스재생 + Floating Player" finished-at="2023-04-12T02:07:43 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_007_001_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_007_001_001 -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2023-04-12T02:07:43 KST" finished-at="2023-04-12T02:07:43 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_007_003_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="TC_007_003_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_007_003_001" duration-ms="41745" started-at="2023-04-12T02:07:43 KST" description="A. Hotfix Regression Test : 007-003-001 apollo_news_play_recent_001 뉴스 재생" finished-at="2023-04-12T02:08:24 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_007_003_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_007_003_001 -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2023-04-12T02:07:43 KST" finished-at="2023-04-12T02:07:43 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_007_001_001 status=SUCCESS method=Apollo_03_공통.TC_007_001_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2023-04-12T02:08:24 KST" finished-at="2023-04-12T02:08:24 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_007_003_001 status=SUCCESS method=Apollo_03_공통.TC_007_003_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="TC_008_001_002(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_008_001_002" duration-ms="46656" started-at="2023-04-12T02:08:24 KST" description="A. Hotfix Regression Test : 008-001-002 fortune_dux_002 Template + CardTableScrollable" finished-at="2023-04-12T02:09:11 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_008_001_002(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at unit.Utilities.templatesType_tid_JsonParsing(Utilities.java:4507)
at unit.Utilities.TemplateType_JsonParsing(Utilities.java:3046)
at Apollo_001_공통.Apollo_03_공통.TC_008_001_002(Apollo_03_공통.java:167)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_008_001_002 -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2023-04-12T02:08:24 KST" finished-at="2023-04-12T02:08:24 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_008_001_002(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="618" started-at="2023-04-12T02:09:11 KST" finished-at="2023-04-12T02:09:12 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_008_001_002 status=FAILURE method=Apollo_03_공통.TC_008_001_002(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="1" started-at="2023-04-12T02:09:12 KST" finished-at="2023-04-12T02:09:12 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_008_004_002(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="TC_008_004_002(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_008_004_002" duration-ms="41549" started-at="2023-04-12T02:09:12 KST" description="A. Hotfix Regression Test : 008-004-001 fortune_zodiac_001 띠 운세 + 날짜 지정 + 띠 이름 O" finished-at="2023-04-12T02:09:53 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_008_004_002(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_008_004_002 -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2023-04-12T02:09:53 KST" finished-at="2023-04-12T02:09:53 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_008_004_002 status=SUCCESS method=Apollo_03_공통.TC_008_004_002(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="TC_010_003_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_010_003_001" duration-ms="36618" started-at="2023-04-12T02:09:53 KST" description="A. Hotfix Regression Test : 010-003-001 weather_cast_default_001 시간/날짜 미지정" finished-at="2023-04-12T02:10:30 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_010_003_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_010_003_001 -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2023-04-12T02:09:53 KST" finished-at="2023-04-12T02:09:53 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_010_003_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="1" started-at="2023-04-12T02:10:30 KST" finished-at="2023-04-12T02:10:30 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_011_001_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2023-04-12T02:10:30 KST" finished-at="2023-04-12T02:10:30 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_010_003_001 status=SUCCESS method=Apollo_03_공통.TC_010_003_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="TC_011_001_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_011_001_001" duration-ms="70018" started-at="2023-04-12T02:10:30 KST" description="A. Hotfix Regression Test : 011-010-001 apollo_tmap_show_recent_001 apollo_tmap_show_recent_002 최근 목적지 요청" finished-at="2023-04-12T02:11:40 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_011_001_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_011_001_001 -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="1" started-at="2023-04-12T02:11:40 KST" finished-at="2023-04-12T02:11:40 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_013_002_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2023-04-12T02:11:40 KST" finished-at="2023-04-12T02:11:40 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_011_001_001 status=SUCCESS method=Apollo_03_공통.TC_011_001_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="TC_013_002_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_013_002_001" duration-ms="64866" started-at="2023-04-12T02:11:40 KST" description="A. Hotfix Regression Test : 013-002-001 wordchain_start_004 난이도 설정 없이 쿵쿵따맨 먼저 게임을 시작하는 경우" finished-at="2023-04-12T02:12:45 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_013_002_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_013_002_001 -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2023-04-12T02:12:45 KST" finished-at="2023-04-12T02:12:45 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_013_002_001 status=SUCCESS method=Apollo_03_공통.TC_013_002_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="TC_014_004_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_014_004_001" duration-ms="5469" started-at="2023-04-12T02:12:45 KST" description="A. Hotfix Regression Test : 014-004-001 apollo_message_sendmessage_001 수신자 / 메시지 없음" finished-at="2023-04-12T02:12:50 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_014_004_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="junit.framework.AssertionFailedError">
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:47)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertTrue(Assert.java:27)
at Apollo_001_공통.Apollo_03_공통.TC_014_004_001(Apollo_03_공통.java:299)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_014_004_001 -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2023-04-12T02:12:45 KST" finished-at="2023-04-12T02:12:45 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_014_004_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="473" started-at="2023-04-12T02:12:50 KST" finished-at="2023-04-12T02:12:51 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_014_004_001 status=FAILURE method=Apollo_03_공통.TC_014_004_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2023-04-12T02:12:51 KST" finished-at="2023-04-12T02:12:51 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_014_008_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="FAIL" signature="TC_014_008_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_014_008_001" duration-ms="5415" started-at="2023-04-12T02:12:51 KST" description="A. Hotfix Regression Test : 014-008-001 apollo_message_dialogue_020 연락처 리스트 중 수신자 선택 + 기/서수 + MSG_BODY값 없음" finished-at="2023-04-12T02:12:56 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_014_008_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="junit.framework.AssertionFailedError">
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:47)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertTrue(Assert.java:27)
at Apollo_001_공통.Apollo_03_공통.TC_014_008_001(Apollo_03_공통.java:327)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_014_008_001 -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="498" started-at="2023-04-12T02:12:56 KST" finished-at="2023-04-12T02:12:56 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_014_008_001 status=FAILURE method=Apollo_03_공통.TC_014_008_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="TC_015_004_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_015_004_001" duration-ms="25833" started-at="2023-04-12T02:12:56 KST" description="A. Hotfix Regression Test : 015-004-001 apollo_telephony_global_001 Domain Default" finished-at="2023-04-12T02:13:22 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_015_004_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: By.id: refresh (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: By.id: refresh (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at unit.Utilities.WaitfindElement(Utilities.java:157)
at unit.Utilities.click(Utilities.java:1398)
at Apollo_001_공통.Apollo_03_공통.TC_015_004_001(Apollo_03_공통.java:372)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
Caused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-KEI', ip: '172.27.24.217', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: unit.Utilities
Capabilities {appActivity: com.skt.nugu.visual.splash...., appPackage: com.skt.nugu.apollo.stg, autoGrantPermissions: true, automationName: UIAutomator2, chromedriverArgs: {browserName: chrome, goog:chromeOptions: {args: [], extensions: [], w3c: true}}, chromedriverExecutable: C:\chromedriver_win32\chrom..., databaseEnabled: false, desired: {appActivity: com.skt.nugu.visual.splash...., appPackage: com.skt.nugu.apollo.stg, autoGrantPermissions: true, automationName: UIAutomator2, chromedriverArgs: {browserName: chrome, goog:chromeOptions: {args: [], extensions: [], w3c: true}}, chromedriverExecutable: C:\chromedriver_win32\chrom..., deviceName: Android, extractChromeAndroidPackageFromContextName: true, focused: true, newCommandTimeout: 600000, noReset: true, platformName: android, recreateChromeDriverSessions: false, showChromedriverLog: true, udid: R33M4000CY}, deviceApiLevel: 31, deviceManufacturer: samsung, deviceModel: SM-N976N, deviceName: R33M4000CY, deviceScreenDensity: 420, deviceScreenSize: 1080x2280, deviceUDID: R33M4000CY, extractChromeAndroidPackageFromContextName: true, focused: true, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 600000, noReset: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 12, recreateChromeDriverSessions: false, showChromedriverLog: true, statBarHeight: 85, takesScreenshot: true, udid: R33M4000CY, viewportRect: {height: 1984, left: 0, top: 85, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 7ccf8195-ca2e-4745-82ad-27ae5d91ded9
*** Element info: {Using=id, value=refresh}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at unit.Utilities.execute(Utilities.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:61)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at unit.Utilities.findElement(Utilities.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
at io.appium.java_client.DefaultGenericMobileDriver.findElementById(DefaultGenericMobileDriver.java:69)
at io.appium.java_client.AppiumDriver.findElementById(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElementById(AndroidDriver.java:1)
at unit.Utilities.findElementById(Utilities.java:1)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at unit.Utilities.findElement(Utilities.java:1)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:205)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:201)
at org.openqa.selenium.support.ui.ExpectedConditions$22.apply(ExpectedConditions.java:641)
at org.openqa.selenium.support.ui.ExpectedConditions$22.apply(ExpectedConditions.java:638)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_015_004_001 -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2023-04-12T02:12:56 KST" finished-at="2023-04-12T02:12:56 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_015_004_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="559" started-at="2023-04-12T02:13:22 KST" finished-at="2023-04-12T02:13:23 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_015_004_001 status=FAILURE method=Apollo_03_공통.TC_015_004_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="1" started-at="2023-04-12T02:13:23 KST" finished-at="2023-04-12T02:13:23 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_015_005_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="FAIL" signature="TC_015_005_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_015_005_001" duration-ms="25882" started-at="2023-04-12T02:13:23 KST" description="A. Hotfix Regression Test : 015-005-001 apollo_telephony_connetcall_001 수신자를 지정하지 않고 발신 요청 + 수신자 ENTITY 없는 발신 요청" finished-at="2023-04-12T02:13:49 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_015_005_001(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: By.id: refresh (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: By.id: refresh (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at unit.Utilities.WaitfindElement(Utilities.java:157)
at unit.Utilities.click(Utilities.java:1398)
at Apollo_001_공통.Apollo_03_공통.TC_015_005_001(Apollo_03_공통.java:394)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
Caused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-KEI', ip: '172.27.24.217', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: unit.Utilities
Capabilities {appActivity: com.skt.nugu.visual.splash...., appPackage: com.skt.nugu.apollo.stg, autoGrantPermissions: true, automationName: UIAutomator2, chromedriverArgs: {browserName: chrome, goog:chromeOptions: {args: [], extensions: [], w3c: true}}, chromedriverExecutable: C:\chromedriver_win32\chrom..., databaseEnabled: false, desired: {appActivity: com.skt.nugu.visual.splash...., appPackage: com.skt.nugu.apollo.stg, autoGrantPermissions: true, automationName: UIAutomator2, chromedriverArgs: {browserName: chrome, goog:chromeOptions: {args: [], extensions: [], w3c: true}}, chromedriverExecutable: C:\chromedriver_win32\chrom..., deviceName: Android, extractChromeAndroidPackageFromContextName: true, focused: true, newCommandTimeout: 600000, noReset: true, platformName: android, recreateChromeDriverSessions: false, showChromedriverLog: true, udid: R33M4000CY}, deviceApiLevel: 31, deviceManufacturer: samsung, deviceModel: SM-N976N, deviceName: R33M4000CY, deviceScreenDensity: 420, deviceScreenSize: 1080x2280, deviceUDID: R33M4000CY, extractChromeAndroidPackageFromContextName: true, focused: true, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 600000, noReset: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 12, recreateChromeDriverSessions: false, showChromedriverLog: true, statBarHeight: 85, takesScreenshot: true, udid: R33M4000CY, viewportRect: {height: 1984, left: 0, top: 85, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 7ccf8195-ca2e-4745-82ad-27ae5d91ded9
*** Element info: {Using=id, value=refresh}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at unit.Utilities.execute(Utilities.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:61)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at unit.Utilities.findElement(Utilities.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
at io.appium.java_client.DefaultGenericMobileDriver.findElementById(DefaultGenericMobileDriver.java:69)
at io.appium.java_client.AppiumDriver.findElementById(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElementById(AndroidDriver.java:1)
at unit.Utilities.findElementById(Utilities.java:1)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at unit.Utilities.findElement(Utilities.java:1)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:205)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:201)
at org.openqa.selenium.support.ui.ExpectedConditions$22.apply(ExpectedConditions.java:641)
at org.openqa.selenium.support.ui.ExpectedConditions$22.apply(ExpectedConditions.java:638)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_015_005_001 -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="638" started-at="2023-04-12T02:13:49 KST" finished-at="2023-04-12T02:13:49 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_015_005_001 status=FAILURE method=Apollo_03_공통.TC_015_005_001(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="TC_015_016_003(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="TC_015_016_003" duration-ms="54006" started-at="2023-04-12T02:13:49 KST" description="A. Hotfix Regression Test : 015-016-003 캐릭터 프로필 설정 영역 + 전화 프로필 설정 영역" finished-at="2023-04-12T02:14:43 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_015_016_003(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_015_016_003 -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2023-04-12T02:13:49 KST" finished-at="2023-04-12T02:13:49 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Apollo_001_공통.Apollo_03_공통.TC_015_016_003(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="tearDownClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="tearDownClass" is-config="true" duration-ms="752" started-at="2023-04-12T02:14:43 KST" finished-at="2023-04-12T02:14:44 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[STG]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[APOLLO_STG]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[in]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[R33M4000CY]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[adot]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[APL00000CAP8UMKRSNB4]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[APL00000CAP8UMNEOSG0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2023-04-12T02:14:43 KST" finished-at="2023-04-12T02:14:43 KST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_015_016_003 status=SUCCESS method=Apollo_03_공통.TC_015_016_003(java.lang.reflect.Method)[pri:0, instance:Apollo_001_공통.Apollo_03_공통@50a7bc6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
      </class> <!-- Apollo_001_공통.Apollo_03_공통 -->
    </test> <!-- Test_Project -->
  </suite> <!-- ExtentReport -->
</testng-results>
